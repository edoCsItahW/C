a = 10;  % 赋值语句

% 函数定义, 函数名(形参 | 关键字: 默认值)[类型 | 关键字类型] -> 返回值 { 函数体 }
testFunc(num, str, |, keyword: "default")[number, string, |, string] -> number {
    % 输出语句
    "Hello, world!"->;
    % for循环, [可迭代对象, $变量名 => { 循环体 }]
    [num, $i, $j => {}]
    % if语句, [条件, { 语句 }] - [条件, { 语句 }] - ... - [条件, { 语句 }]
    [num < 0, { "if 语句"->; } - [num == 10, { "else if 语句"->; }] - { "else 语句"->; }
    % while循环, [条件, { 语句 }]
    < num > 0, { "while 语句"->; num-- }>
    -> num; %返回值
}

% 类定义, 类名 ( 基类名 ) [ 成员变量 ] { 成员函数 }
TestClass(BaseClass) [
    num: number,
    str: string
] {
    % 构造函数, 与函数定义类似, 但没有形参和返回值
    TestClass[number, string](num, str) {
        % 成员变量赋值
        this.num = num;
        this.str = str;
    }
    % 成员函数定义, 与函数定义类似, 但没有形参和返回值
    testMethod[number, string](num, str) -> number {
        % 成员变量访问
        "this.num = " + this.num + " this.str = " + this.str ->;
        % 调用其他成员函数
        testFunc(num, str) ->;
        % 返回值
        num + 10;
    }
}
